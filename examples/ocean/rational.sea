function gcd (a: i64, b: i64) -> (result: i64) {
  # If A=0 then GCD(A, B)=B since the Greatest Common Divisor of 0 and B is B.
  # If B=0 then GCD(A, B)=A since the Greatest Common Divisor of 0 and A is A.
  # Let R be the remainder of dividing A by B assuming A > B. (R = A % B)
  # Find GCD( B, R ) because GCD( A, B ) = GCD( B, R ). Use the above steps again.
  
  while a != 0 || b != 0 {
    let new_a = b;
    let new_b = a % b;
    a = new_a;
    b = new_b;
  }
  
  if a == 0 {
    result = b;
  } else if b == 0 {
    result = a;
  }
}

function abs (a: i64) -> (result: i64) {
  if a < 0 {
    result = -a;
  } else {
    result = a;
  }
}

function lcm (a: i64, b: i64)
-> (result: i64 = abs(a) * abs(b) / gcd(a, b))

pack rational {
  numerator: i64
  denominator: i64
}

@Operator(symbol: "+", order: Infix)
function add (a: rational, b: rational) -> (res: rational) {
  let mul: i64 = lcm(a.denominator, b.denominator);
  let num = a.numerator * mul + b.numerator * mul;
  let denom = mul;
  let scale = gcd(num, denom);
  res = ( num / scale, denom / scale );
}

@Operator(symbol: "-", order: Infix)
function subtract (a: rational, b: rational) -> (res: rational) {
  let mul: i64 = lcm(a.denominator, b.denominator);
  let num = a.numerator * mul - b.numerator * mul;
  let denom = mul;
  let scale = gcd(num, denom);
  res = ( num / scale, denom / scale );
}

@Operator(symbol: "*", order: Infix)
function multiply (a: rational, b: rational) -> (res: rational) {
    let num = a.numerator * b.numerator;
    let denom = a.denominator * b.denominator;
    let scale = gcd(num, denom);
    res = (numerator: num / scale, denominator: denom / scale);
}

@Operator(symbol: "/", order: Infix)
function divide (a: rational, b: rational) -> (res: rational) {
    let num = a.numerator * b.denominator;
    let denom = a.denominator * b.numerator;
    let scale = gcd(num, denom);
    res = (numerator: num / scale, denominator: denom / scale);
}

function main () -> (res: i64 = 360.gcd(48)) {
    let test_a = (12 / 24);
    let test_b = (24 / 12);
    let sum = test_a + test_b;
    let diff = test_a - test_b;
    let prod = test_a * test_b;
    let div = test_a / test_b;
}
